name: Chart Testing and Release

on:
  push:
    branches:
      - main
    paths:
      - 'chart/**'
      - '.github/workflows/chart-testing.yaml'

jobs:
  lint-test-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (lint)
        run: |
          ct lint --charts chart/kronic --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.8.0

      - name: Run chart-testing (install)
        run: |
          ct install --charts chart/kronic \
            --helm-extra-args '--timeout 60s' \
            --target-branch ${{ github.event.repository.default_branch }}

  release-chart:
    if: github.ref == 'refs/heads/main'
    needs: lint-test-chart
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.3'
      
      - name: Generate Chart Readme
        run: |
          docker run --rm -v "$(pwd)/chart:/helm-docs" jnorwood/helm-docs@sha256:e438eb9f879e4bb8389ce4acd0f7e9193e3d62e877a1a3cd5abd0393dbe55fe5

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: ./chart
        env:
          CR_SKIP_EXISTING: "true"
          CR_RELEASE_NAME_TEMPLATE: "{{ .Name }}-chart-{{ .Version }}"
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
